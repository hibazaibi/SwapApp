{% extends 'base.html.twig' %}{% block stylesheets %}
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.min.js"></script>
<script src="assets/js/script.min.js"></script>

<link href="vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
<link
        href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
        rel="stylesheet">
<style>
    .sidebar {
        width: 80px;
        height: calc(100vh - 56px);
        position: fixed;

        left: 0;
        background-color: #343a40;
        transition: width 0.3s;
        overflow-x: hidden;
        z-index: 1030;
    }
body{
    margin-left: 7%;
    margin-top: -5%;
}




    .sidebar:hover + .content-wrapper {
        margin-left: 200px; /* Match the expanded sidebar width */
    }

    .card-equal-height {
        height: 100%;
    }

    .card-body {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .card-body p {
        margin-bottom: 0;
    }

    .card-body .fw-bold {
        font-size: 1rem; /* Set a smaller font size for consistent look */
    }



    /* To ensure cards have equal height and fit in the row */
    .card-equal-height {
        height: 95%;
        display: flex;
        flex-direction: column;
    }

    .chart-container {
        flex-grow: 1;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    /* Ensuring all cards in the row are of equal height */
    .row > .col-lg-6 {
        display: flex;
        flex-direction: column;
    }

</style>
<!-- Custom styles for this template-->
{% endblock %}
{% block body %}
<div class="d-flex">
    {% include 'sidebar.html.twig' %}
    <div class="flex-grow-1 p-4">
        {% block content %}
    <div id="wrapper">
        <div class="d-flex flex-column mt-4" id="content-wrapper">
            <div id="content">
                <div class="container-fluid">
                    <!-- Header -->
                    <div class="d-sm-flex justify-content-between align-items-center mb-4">
                        <h3 class="text-dark mb-0">Dashboard</h3>
                        <a class="btn btn-primary btn-sm d-none d-sm-inline-block" role="button" href="#">
                            <i class="fas fa-download fa-sm text-white-50"></i>&nbsp;Generate Report
                        </a>
                    </div>

                    <!-- Summary Cards -->
                    <div class="row">
                        <div class="col-md-6 col-lg-3 mb-4">
                            <div class="card card-equal-height shadow border-start-primary py-2">
                                <div class="card-body">
                                    <div class="row align-items-center no-gutters">
                                        <div class="col me-2">
                                            <div class="text-uppercase text-primary fw-bold text-xs mb-1">
                                                <span>Total number of users:</span>
                                            </div>
{#                                            <div class="text-dark fw-bold h5 mb-0  ">#}
{#              <span class="sizetext" >{{ userCount }}#}
{#                <div *ngIf="userCount === 0">#}
{#                  <p>Loading...</p>#}
{#                </div>#}
{#              </span>#}
{#                                            </div>#}
                                            <h5 class="card-title">{{ totalUsers }}</h5>

                                        </div>
                                        <div class="col-auto">
                                            <i class="fas fa-users fa-2x text-gray-300"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6 col-lg-3 mb-4">
                            <div class="card card-equal-height shadow border-start-success py-2">
                                <div class="card-body">
                                    <div class="row align-items-center no-gutters">
                                        <div class="col me-2">
                                            <div class="text-uppercase text-success fw-bold text-xs mb-1">
                                                <span>Total Articles</span>
                                            </div>
                                            <div class="text-dark fw-bold h5 mb-0">
                                                <h5 class="card-title">{{ totalArticles }}</h5>

                                            </div>
                                        </div>
                                        <div class="col-auto">
                                            <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6 col-lg-3 mb-4">
                            <div class="card card-equal-height shadow border-start-info py-2">
                                <div class="card-body">
                                    <div class="row align-items-center no-gutters">
                                        <div class="col me-2">
                                            <div class="text-uppercase text-info fw-bold text-xs mb-1">
                                                <span>Total Requests</span>
                                            </div>
                                            <div class="row g-0 align-items-center">
                                                <div class="col-auto">
                                                    <div class="text-dark fw-bold h6 mb-0 me-3">
{#                                                        <p>{{ topCommunity?.name }} - {{ topCommunity?.memberCount }} members</p>#}{{ totalRequests }}
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-auto">
                                            <i class="fas fa-clipboard-list fa-2x text-gray-300"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6 col-lg-3 mb-4">
                            <div class="card card-equal-height shadow border-start-warning py-2">
                                <div class="card-body">
                                    <div class="row align-items-center no-gutters">
                                        <div class="col me-2">
                                            <div class="text-uppercase text-warning fw-bold text-xs mb-1">
                                                <span>Pending Requests</span>
                                            </div>
                                            <div class="text-dark fw-bold h5 mb-0">
                                                <span>18</span>
                                            </div>
                                        </div>
                                        <div class="col-auto">
                                            <i class="fas fa-comments fa-2x text-gray-300"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Charts Row 1 -->
                    <!-- Charts Row 1 -->
                    <div class="row">
                        <div class="col-lg-6 mb-4">
                            <div class="card card-equal-height shadow mb-4">
                                <div class="card-header py-3">
                                    <h6 class="text-primary fw-bold m-0">Articles by Month and Year</h6>
                                </div>
                                <div class="card-body">
                                    <div class="chart-container">
                                        <canvas id="articlesChart"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 mb-4">
                            <div class="card card-equal-height shadow mb-4">
                                <div class="card-header py-3">
                                    <h6 class="text-primary fw-bold m-0">Articles by Status</h6>
                                </div>
                                <div class="card-body">
                                    <div class="chart-container" style="width: 50%">
                                        <canvas id="statusChart"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Charts Row 2 -->
                    <div class="row">
                        <div class="col-lg-6 mb-4">
                            <div class="card card-equal-height shadow mb-4">
                                <div class="card-header py-3">
                                    <h6 class="text-primary fw-bold m-0">Requests by Month and Year</h6>
                                </div>
                                <div class="card-body">
                                    <div class="chart-container">
                                        <canvas id="requestsChart"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 mb-4">
                            <div class="card card-equal-height shadow mb-4">
                                <div class="card-header py-3">
                                    <h6 class="text-primary fw-bold m-0">Requests by Status</h6>
                                </div>
                                <div class="card-body">
                                    <div class="chart-container"  style="width: 50%">
                                        <canvas id="requestsStatusChart" ></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <a class="border rounded d-inline scroll-to-top" href="#page-top">
            <i class="fas fa-angle-up"></i>
        </a>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const monthlyLabels = {{ articlesByMonth|map(v => v.month)|json_encode|raw }};
            const monthlyCounts = {{ articlesByMonth|map(v => v.count)|json_encode|raw }};
            const yearlyLabels = {{ articlesByYear|map(v => v.year)|json_encode|raw }};
            const yearlyCounts = {{ articlesByYear|map(v => v.count)|json_encode|raw }};
            const ctx1 = document.getElementById('articlesChart').getContext('2d');
            new Chart(ctx1, {
                type: 'bar',
                data: {
                    labels: monthlyLabels,
                    datasets: [{
                        label: 'Articles per Month',
                        data: monthlyCounts,
                        borderColor: 'rgba(75, 192, 192, 1)',
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderWidth: 1,
                    }, {
                        label: 'Articles per Year',
                        data: yearlyCounts,
                        borderColor: 'rgba(153, 102, 255, 1)',
                        backgroundColor: 'rgba(153, 102, 255, 0.2)',
                        borderWidth: 1,
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            const statusLabels = {{ statusLabels|json_encode|raw }};
            const statusCounts = {{ statusCounts|json_encode|raw }};
            const ctx2 = document.getElementById('statusChart').getContext('2d');
            new Chart(ctx2, {
                type: 'pie',
                data: {
                    labels: statusLabels,
                    datasets: [{
                        label: 'Articles by Status',
                        data: statusCounts,
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                        ],
                        borderWidth: 1,
                    }]
                },
                options: {
                    responsive: true
                }
            });

            const requestLabels = {{ requestsByMonth|map(v => v.month)|json_encode|raw }};
            const requestCounts = {{ requestsByMonth|map(v => v.count)|json_encode|raw }};
            const requestYearlyLabels = {{ requestsByYear|map(v => v.year)|json_encode|raw }};
            const requestYearlyCounts = {{ requestsByYear|map(v => v.count)|json_encode|raw }};
            const ctx3 = document.getElementById('requestsChart').getContext('2d');
            new Chart(ctx3, {
                type: 'line',
                data: {
                    labels: requestLabels,
                    datasets: [{
                        label: 'Requests per Month',
                        data: requestCounts,
                        borderColor: 'rgba(255, 159, 64, 1)',
                        backgroundColor: 'rgba(255, 159, 64, 0.2)',
                        borderWidth: 1,
                    }, {
                        label: 'Requests per Year',
                        data: requestYearlyCounts,
                        borderColor: 'rgba(153, 102, 255, 1)',
                        backgroundColor: 'rgba(153, 102, 255, 0.2)',
                        borderWidth: 1,
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            const requestsStatusLabels = {{ requestsStatusLabels|json_encode|raw }};
            const requestsStatusCounts = {{ requestsStatusCounts|json_encode|raw }};
            const ctx4 = document.getElementById('requestsStatusChart').getContext('2d');
            new Chart(ctx4, {
                type: 'doughnut',
                data: {
                    labels: requestsStatusLabels,
                    datasets: [{
                        label: 'Requests by Status',
                        data: requestsStatusCounts,
                        backgroundColor: [
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)',
                            'rgba(255, 99, 132, 0.2)',
                        ],
                        borderColor: [
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)',
                            'rgba(255, 99, 132, 1)',
                        ],
                        borderWidth: 1,
                    }]
                },
                options: {
                    responsive: true
                }
            });
        });
    </script>
{% endblock %}
    </div>
</div>
{% endblock %}